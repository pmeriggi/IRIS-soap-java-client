//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2011.06.30 at 11:51:43 AM CEST
//

package it.cineca.util.dc;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

// TODO: Auto-generated Javadoc
/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the it.cineca.util.dc
 * package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content. The Java
 * representation of XML content can consist of schema derived interfaces and classes representing the binding of schema type definitions,
 * element declarations and model groups. Factory methods for each of these are provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

	/** The Constant _Title_QNAME. */
	private static final QName _Title_QNAME = new QName("http://purl.org/dc/elements/1.1/", "title");

	/** The Constant _Subject_QNAME. */
	private static final QName _Subject_QNAME = new QName("http://purl.org/dc/elements/1.1/", "subject");

	/** The Constant _Date_QNAME. */
	private static final QName _Date_QNAME = new QName("http://purl.org/dc/elements/1.1/", "date");

	/** The Constant _Publisher_QNAME. */
	private static final QName _Publisher_QNAME = new QName("http://purl.org/dc/elements/1.1/", "publisher");

	/** The Constant _Creator_QNAME. */
	private static final QName _Creator_QNAME = new QName("http://purl.org/dc/elements/1.1/", "creator");

	/** The Constant _Source_QNAME. */
	private static final QName _Source_QNAME = new QName("http://purl.org/dc/elements/1.1/", "source");

	/** The Constant _Coverage_QNAME. */
	private static final QName _Coverage_QNAME = new QName("http://purl.org/dc/elements/1.1/", "coverage");

	/** The Constant _Contributor_QNAME. */
	private static final QName _Contributor_QNAME = new QName("http://purl.org/dc/elements/1.1/", "contributor");

	/** The Constant _Description_QNAME. */
	private static final QName _Description_QNAME = new QName("http://purl.org/dc/elements/1.1/", "description");

	/** The Constant _Any_QNAME. */
	private static final QName _Any_QNAME = new QName("http://purl.org/dc/elements/1.1/", "any");

	/** The Constant _Rights_QNAME. */
	private static final QName _Rights_QNAME = new QName("http://purl.org/dc/elements/1.1/", "rights");

	/** The Constant _Type_QNAME. */
	private static final QName _Type_QNAME = new QName("http://purl.org/dc/elements/1.1/", "type");

	/** The Constant _Language_QNAME. */
	private static final QName _Language_QNAME = new QName("http://purl.org/dc/elements/1.1/", "language");

	/** The Constant _Identifier_QNAME. */
	private static final QName _Identifier_QNAME = new QName("http://purl.org/dc/elements/1.1/", "identifier");

	/** The Constant _Relation_QNAME. */
	private static final QName _Relation_QNAME = new QName("http://purl.org/dc/elements/1.1/", "relation");

	/** The Constant _Format_QNAME. */
	private static final QName _Format_QNAME = new QName("http://purl.org/dc/elements/1.1/", "format");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: it.cineca.util.dc
	 */
	public ObjectFactory() {}

	/**
	 * Create an instance of {@link SimpleLiteral }.
	 * 
	 * @return the simple literal
	 */
	public SimpleLiteral createSimpleLiteral() {
		return new SimpleLiteral();
	}

	/**
	 * Create an instance of {@link ElementContainer }.
	 * 
	 * @return the element container
	 */
	public ElementContainer createElementContainer() {
		return new ElementContainer();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "title", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createTitle(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Title_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "subject", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createSubject(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Subject_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "date", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createDate(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Date_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "publisher", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createPublisher(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Publisher_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "creator", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createCreator(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Creator_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "source", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createSource(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Source_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "coverage", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createCoverage(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Coverage_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "contributor", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createContributor(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Contributor_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "description", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createDescription(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Description_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "any")
	public JAXBElement<SimpleLiteral> createAny(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Any_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "rights", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createRights(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Rights_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "type", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createType(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Type_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "language", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createLanguage(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Language_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "identifier", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createIdentifier(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Identifier_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "relation", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createRelation(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Relation_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "format", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createFormat(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Format_QNAME, SimpleLiteral.class, null, value);
	}

}
