//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2011.06.30 at 10:49:32 AM CEST
//

package it.cineca.util.dc.terms;

import it.cineca.util.dc.SimpleLiteral;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

// TODO: Auto-generated Javadoc
/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the it.cineca.util.dc.terms
 * package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content. The Java
 * representation of XML content can consist of schema derived interfaces and classes representing the binding of schema type definitions,
 * element declarations and model groups. Factory methods for each of these are provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

	/** The Constant _Abstract_QNAME. */
	private static final QName _Abstract_QNAME = new QName("http://purl.org/dc/terms/", "abstract");

	/** The Constant _Audience_QNAME. */
	private static final QName _Audience_QNAME = new QName("http://purl.org/dc/terms/", "audience");

	/** The Constant _Spatial_QNAME. */
	private static final QName _Spatial_QNAME = new QName("http://purl.org/dc/terms/", "spatial");

	/** The Constant _DateSubmitted_QNAME. */
	private static final QName _DateSubmitted_QNAME = new QName("http://purl.org/dc/terms/", "dateSubmitted");

	/** The Constant _AccrualMethod_QNAME. */
	private static final QName _AccrualMethod_QNAME = new QName("http://purl.org/dc/terms/", "accrualMethod");

	/** The Constant _HasPart_QNAME. */
	private static final QName _HasPart_QNAME = new QName("http://purl.org/dc/terms/", "hasPart");

	/** The Constant _Medium_QNAME. */
	private static final QName _Medium_QNAME = new QName("http://purl.org/dc/terms/", "medium");

	/** The Constant _AccessRights_QNAME. */
	private static final QName _AccessRights_QNAME = new QName("http://purl.org/dc/terms/", "accessRights");

	/** The Constant _Coverage_QNAME. */
	private static final QName _Coverage_QNAME = new QName("http://purl.org/dc/terms/", "coverage");

	/** The Constant _Source_QNAME. */
	private static final QName _Source_QNAME = new QName("http://purl.org/dc/terms/", "source");

	/** The Constant _Temporal_QNAME. */
	private static final QName _Temporal_QNAME = new QName("http://purl.org/dc/terms/", "temporal");

	/** The Constant _IsReferencedBy_QNAME. */
	private static final QName _IsReferencedBy_QNAME = new QName("http://purl.org/dc/terms/", "isReferencedBy");

	/** The Constant _IsVersionOf_QNAME. */
	private static final QName _IsVersionOf_QNAME = new QName("http://purl.org/dc/terms/", "isVersionOf");

	/** The Constant _DateCopyrighted_QNAME. */
	private static final QName _DateCopyrighted_QNAME = new QName("http://purl.org/dc/terms/", "dateCopyrighted");

	/** The Constant _AccrualPolicy_QNAME. */
	private static final QName _AccrualPolicy_QNAME = new QName("http://purl.org/dc/terms/", "accrualPolicy");

	/** The Constant _Valid_QNAME. */
	private static final QName _Valid_QNAME = new QName("http://purl.org/dc/terms/", "valid");

	/** The Constant _IsFormatOf_QNAME. */
	private static final QName _IsFormatOf_QNAME = new QName("http://purl.org/dc/terms/", "isFormatOf");

	/** The Constant _TableOfContents_QNAME. */
	private static final QName _TableOfContents_QNAME = new QName("http://purl.org/dc/terms/", "tableOfContents");

	/** The Constant _Subject_QNAME. */
	private static final QName _Subject_QNAME = new QName("http://purl.org/dc/terms/", "subject");

	/** The Constant _Date_QNAME. */
	private static final QName _Date_QNAME = new QName("http://purl.org/dc/terms/", "date");

	/** The Constant _Publisher_QNAME. */
	private static final QName _Publisher_QNAME = new QName("http://purl.org/dc/terms/", "publisher");

	/** The Constant _Creator_QNAME. */
	private static final QName _Creator_QNAME = new QName("http://purl.org/dc/terms/", "creator");

	/** The Constant _Title_QNAME. */
	private static final QName _Title_QNAME = new QName("http://purl.org/dc/terms/", "title");

	/** The Constant _ConformsTo_QNAME. */
	private static final QName _ConformsTo_QNAME = new QName("http://purl.org/dc/terms/", "conformsTo");

	/** The Constant _Extent_QNAME. */
	private static final QName _Extent_QNAME = new QName("http://purl.org/dc/terms/", "extent");

	/** The Constant _BibliographicCitation_QNAME. */
	private static final QName _BibliographicCitation_QNAME = new QName("http://purl.org/dc/terms/", "bibliographicCitation");

	/** The Constant _License_QNAME. */
	private static final QName _License_QNAME = new QName("http://purl.org/dc/terms/", "license");

	/** The Constant _Replaces_QNAME. */
	private static final QName _Replaces_QNAME = new QName("http://purl.org/dc/terms/", "replaces");

	/** The Constant _Issued_QNAME. */
	private static final QName _Issued_QNAME = new QName("http://purl.org/dc/terms/", "issued");

	/** The Constant _Alternative_QNAME. */
	private static final QName _Alternative_QNAME = new QName("http://purl.org/dc/terms/", "alternative");

	/** The Constant _Relation_QNAME. */
	private static final QName _Relation_QNAME = new QName("http://purl.org/dc/terms/", "relation");

	/** The Constant _Available_QNAME. */
	private static final QName _Available_QNAME = new QName("http://purl.org/dc/terms/", "available");

	/** The Constant _Format_QNAME. */
	private static final QName _Format_QNAME = new QName("http://purl.org/dc/terms/", "format");

	/** The Constant _InstructionalMethod_QNAME. */
	private static final QName _InstructionalMethod_QNAME = new QName("http://purl.org/dc/terms/", "instructionalMethod");

	/** The Constant _Modified_QNAME. */
	private static final QName _Modified_QNAME = new QName("http://purl.org/dc/terms/", "modified");

	/** The Constant _IsRequiredBy_QNAME. */
	private static final QName _IsRequiredBy_QNAME = new QName("http://purl.org/dc/terms/", "isRequiredBy");

	/** The Constant _Requires_QNAME. */
	private static final QName _Requires_QNAME = new QName("http://purl.org/dc/terms/", "requires");

	/** The Constant _Provenance_QNAME. */
	private static final QName _Provenance_QNAME = new QName("http://purl.org/dc/terms/", "provenance");

	/** The Constant _DateAccepted_QNAME. */
	private static final QName _DateAccepted_QNAME = new QName("http://purl.org/dc/terms/", "dateAccepted");

	/** The Constant _Mediator_QNAME. */
	private static final QName _Mediator_QNAME = new QName("http://purl.org/dc/terms/", "mediator");

	/** The Constant _HasVersion_QNAME. */
	private static final QName _HasVersion_QNAME = new QName("http://purl.org/dc/terms/", "hasVersion");

	/** The Constant _Language_QNAME. */
	private static final QName _Language_QNAME = new QName("http://purl.org/dc/terms/", "language");

	/** The Constant _IsPartOf_QNAME. */
	private static final QName _IsPartOf_QNAME = new QName("http://purl.org/dc/terms/", "isPartOf");

	/** The Constant _Identifier_QNAME. */
	private static final QName _Identifier_QNAME = new QName("http://purl.org/dc/terms/", "identifier");

	/** The Constant _IsReplacedBy_QNAME. */
	private static final QName _IsReplacedBy_QNAME = new QName("http://purl.org/dc/terms/", "isReplacedBy");

	/** The Constant _Rights_QNAME. */
	private static final QName _Rights_QNAME = new QName("http://purl.org/dc/terms/", "rights");

	/** The Constant _RightsHolder_QNAME. */
	private static final QName _RightsHolder_QNAME = new QName("http://purl.org/dc/terms/", "rightsHolder");

	/** The Constant _Type_QNAME. */
	private static final QName _Type_QNAME = new QName("http://purl.org/dc/terms/", "type");

	/** The Constant _HasFormat_QNAME. */
	private static final QName _HasFormat_QNAME = new QName("http://purl.org/dc/terms/", "hasFormat");

	/** The Constant _References_QNAME. */
	private static final QName _References_QNAME = new QName("http://purl.org/dc/terms/", "references");

	/** The Constant _Created_QNAME. */
	private static final QName _Created_QNAME = new QName("http://purl.org/dc/terms/", "created");

	/** The Constant _AccrualPeriodicity_QNAME. */
	private static final QName _AccrualPeriodicity_QNAME = new QName("http://purl.org/dc/terms/", "accrualPeriodicity");

	/** The Constant _EducationLevel_QNAME. */
	private static final QName _EducationLevel_QNAME = new QName("http://purl.org/dc/terms/", "educationLevel");

	/** The Constant _Contributor_QNAME. */
	private static final QName _Contributor_QNAME = new QName("http://purl.org/dc/terms/", "contributor");

	/** The Constant _Description_QNAME. */
	private static final QName _Description_QNAME = new QName("http://purl.org/dc/terms/", "description");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: it.cineca.util.dc.terms
	 */
	public ObjectFactory() {}

	/**
	 * Create an instance of {@link Point }.
	 * 
	 * @return the point
	 */
	public Point createPoint() {
		return new Point();
	}

	/**
	 * Create an instance of {@link RFC3066 }.
	 * 
	 * @return the RF c3066
	 */
	public RFC3066 createRFC3066() {
		return new RFC3066();
	}

	/**
	 * Create an instance of {@link TGN }.
	 * 
	 * @return the tgn
	 */
	public TGN createTGN() {
		return new TGN();
	}

	/**
	 * Create an instance of {@link UDC }.
	 * 
	 * @return the udc
	 */
	public UDC createUDC() {
		return new UDC();
	}

	/**
	 * Create an instance of {@link LCSH }.
	 * 
	 * @return the lcsh
	 */
	public LCSH createLCSH() {
		return new LCSH();
	}

	/**
	 * Create an instance of {@link LCC }.
	 * 
	 * @return the lcc
	 */
	public LCC createLCC() {
		return new LCC();
	}

	/**
	 * Create an instance of {@link ISO6392 }.
	 * 
	 * @return the checks if is o6392
	 */
	public ISO6392 createISO6392() {
		return new ISO6392();
	}

	/**
	 * Create an instance of {@link MESH }.
	 * 
	 * @return the mesh
	 */
	public MESH createMESH() {
		return new MESH();
	}

	/**
	 * Create an instance of {@link Period }.
	 * 
	 * @return the period
	 */
	public Period createPeriod() {
		return new Period();
	}

	/**
	 * Create an instance of {@link RFC4646 }.
	 * 
	 * @return the RF c4646
	 */
	public RFC4646 createRFC4646() {
		return new RFC4646();
	}

	/**
	 * Create an instance of {@link ISO6393 }.
	 * 
	 * @return the checks if is o6393
	 */
	public ISO6393 createISO6393() {
		return new ISO6393();
	}

	/**
	 * Create an instance of {@link W3CDTF }.
	 * 
	 * @return the w3 cdtf
	 */
	public W3CDTF createW3CDTF() {
		return new W3CDTF();
	}

	/**
	 * Create an instance of {@link URI }.
	 * 
	 * @return the uri
	 */
	public URI createURI() {
		return new URI();
	}

	/**
	 * Create an instance of {@link DCMIType }.
	 * 
	 * @return the DCMI type
	 */
	public DCMIType createDCMIType() {
		return new DCMIType();
	}

	/**
	 * Create an instance of {@link DDC }.
	 * 
	 * @return the ddc
	 */
	public DDC createDDC() {
		return new DDC();
	}

	/**
	 * Create an instance of {@link RFC1766 }.
	 * 
	 * @return the RF c1766
	 */
	public RFC1766 createRFC1766() {
		return new RFC1766();
	}

	/**
	 * Create an instance of {@link IMT }.
	 * 
	 * @return the imt
	 */
	public IMT createIMT() {
		return new IMT();
	}

	/**
	 * Create an instance of {@link ElementOrRefinementContainer }.
	 * 
	 * @return the element or refinement container
	 */
	public ElementOrRefinementContainer createElementOrRefinementContainer() {
		return new ElementOrRefinementContainer();
	}

	/**
	 * Create an instance of {@link ISO3166 }.
	 * 
	 * @return the checks if is o3166
	 */
	public ISO3166 createISO3166() {
		return new ISO3166();
	}

	/**
	 * Create an instance of {@link Box }.
	 * 
	 * @return the box
	 */
	public Box createBox() {
		return new Box();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "abstract", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "description")
	public JAXBElement<SimpleLiteral> createAbstract(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Abstract_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "audience", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createAudience(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Audience_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "spatial", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "coverage")
	public JAXBElement<SimpleLiteral> createSpatial(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Spatial_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "dateSubmitted", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createDateSubmitted(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_DateSubmitted_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accrualMethod", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createAccrualMethod(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_AccrualMethod_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "hasPart", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createHasPart(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_HasPart_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "medium", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "format")
	public JAXBElement<SimpleLiteral> createMedium(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Medium_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accessRights", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "rights")
	public JAXBElement<SimpleLiteral> createAccessRights(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_AccessRights_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "coverage", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "coverage")
	public JAXBElement<SimpleLiteral> createCoverage(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Coverage_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "source", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "source")
	public JAXBElement<SimpleLiteral> createSource(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Source_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "temporal", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "coverage")
	public JAXBElement<SimpleLiteral> createTemporal(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Temporal_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isReferencedBy", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createIsReferencedBy(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_IsReferencedBy_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isVersionOf", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createIsVersionOf(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_IsVersionOf_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "dateCopyrighted", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createDateCopyrighted(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_DateCopyrighted_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accrualPolicy", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createAccrualPolicy(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_AccrualPolicy_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "valid", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createValid(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Valid_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isFormatOf", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createIsFormatOf(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_IsFormatOf_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "tableOfContents", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "description")
	public JAXBElement<SimpleLiteral> createTableOfContents(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_TableOfContents_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "subject", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "subject")
	public JAXBElement<SimpleLiteral> createSubject(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Subject_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "date", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createDate(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Date_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "publisher", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "publisher")
	public JAXBElement<SimpleLiteral> createPublisher(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Publisher_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "creator", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "creator")
	public JAXBElement<SimpleLiteral> createCreator(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Creator_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "title", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "title")
	public JAXBElement<SimpleLiteral> createTitle(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Title_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "conformsTo", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createConformsTo(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_ConformsTo_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "extent", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "format")
	public JAXBElement<SimpleLiteral> createExtent(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Extent_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "bibliographicCitation", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "identifier")
	public JAXBElement<SimpleLiteral> createBibliographicCitation(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_BibliographicCitation_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "license", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "rights")
	public JAXBElement<SimpleLiteral> createLicense(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_License_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "replaces", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createReplaces(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Replaces_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "issued", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createIssued(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Issued_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "alternative", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "title")
	public JAXBElement<SimpleLiteral> createAlternative(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Alternative_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "relation", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createRelation(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Relation_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "available", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createAvailable(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Available_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "format", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "format")
	public JAXBElement<SimpleLiteral> createFormat(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Format_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "instructionalMethod", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createInstructionalMethod(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_InstructionalMethod_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "modified", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createModified(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Modified_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isRequiredBy", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createIsRequiredBy(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_IsRequiredBy_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "requires", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createRequires(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Requires_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "provenance", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createProvenance(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Provenance_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "dateAccepted", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createDateAccepted(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_DateAccepted_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "mediator", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "audience")
	public JAXBElement<SimpleLiteral> createMediator(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Mediator_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "hasVersion", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createHasVersion(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_HasVersion_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "language", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "language")
	public JAXBElement<SimpleLiteral> createLanguage(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Language_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isPartOf", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createIsPartOf(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_IsPartOf_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "identifier", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "identifier")
	public JAXBElement<SimpleLiteral> createIdentifier(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Identifier_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "isReplacedBy", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createIsReplacedBy(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_IsReplacedBy_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "rights", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "rights")
	public JAXBElement<SimpleLiteral> createRights(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Rights_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "rightsHolder", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createRightsHolder(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_RightsHolder_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "type", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "type")
	public JAXBElement<SimpleLiteral> createType(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Type_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "hasFormat", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createHasFormat(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_HasFormat_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "references", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "relation")
	public JAXBElement<SimpleLiteral> createReferences(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_References_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "created", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "date")
	public JAXBElement<SimpleLiteral> createCreated(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Created_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "accrualPeriodicity", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "any")
	public JAXBElement<SimpleLiteral> createAccrualPeriodicity(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_AccrualPeriodicity_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "educationLevel", substitutionHeadNamespace = "http://purl.org/dc/terms/", substitutionHeadName = "audience")
	public JAXBElement<SimpleLiteral> createEducationLevel(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_EducationLevel_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "contributor", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "contributor")
	public JAXBElement<SimpleLiteral> createContributor(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Contributor_QNAME, SimpleLiteral.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}.
	 * 
	 * @param value the value
	 * @return the JAXB element< simple literal>
	 */
	@XmlElementDecl(namespace = "http://purl.org/dc/terms/", name = "description", substitutionHeadNamespace = "http://purl.org/dc/", substitutionHeadName = "description")
	public JAXBElement<SimpleLiteral> createDescription(SimpleLiteral value) {
		return new JAXBElement<SimpleLiteral>(_Description_QNAME, SimpleLiteral.class, null, value);
	}

}
